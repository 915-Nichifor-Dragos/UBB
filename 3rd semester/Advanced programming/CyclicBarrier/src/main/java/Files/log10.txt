Program id: 0
Execution stack: 
(int cnt;(Ref(int) v1;(New(v1, 2);(Ref(int) v2;(New(v2, 3);(Ref(int) v3;(New(v3, 4);(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3)))))))))))))
Symbol table: 
Output list: 
File table: 
Heap: 
Barrier table: 

Program id: 0
Execution stack: 
int cnt
(Ref(int) v1;(New(v1, 2);(Ref(int) v2;(New(v2, 3);(Ref(int) v3;(New(v3, 4);(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3))))))))))))
Symbol table: 
Output list: 
File table: 
Heap: 
Barrier table: 

Program id: 0
Execution stack: 
(Ref(int) v1;(New(v1, 2);(Ref(int) v2;(New(v2, 3);(Ref(int) v3;(New(v3, 4);(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3))))))))))))
Symbol table: 
cnt -> 0
Output list: 
File table: 
Heap: 
Barrier table: 

Program id: 0
Execution stack: 
Ref(int) v1
(New(v1, 2);(Ref(int) v2;(New(v2, 3);(Ref(int) v3;(New(v3, 4);(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3)))))))))))
Symbol table: 
cnt -> 0
Output list: 
File table: 
Heap: 
Barrier table: 

Program id: 0
Execution stack: 
(New(v1, 2);(Ref(int) v2;(New(v2, 3);(Ref(int) v3;(New(v3, 4);(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3)))))))))))
Symbol table: 
cnt -> 0
v1 -> (0, int)
Output list: 
File table: 
Heap: 
Barrier table: 

Program id: 0
Execution stack: 
New(v1, 2)
(Ref(int) v2;(New(v2, 3);(Ref(int) v3;(New(v3, 4);(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3))))))))))
Symbol table: 
cnt -> 0
v1 -> (0, int)
Output list: 
File table: 
Heap: 
Barrier table: 

Program id: 0
Execution stack: 
(Ref(int) v2;(New(v2, 3);(Ref(int) v3;(New(v3, 4);(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3))))))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
Output list: 
File table: 
Heap: 
1 -> 2
Barrier table: 

Program id: 0
Execution stack: 
Ref(int) v2
(New(v2, 3);(Ref(int) v3;(New(v3, 4);(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3)))))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
Output list: 
File table: 
Heap: 
1 -> 2
Barrier table: 

Program id: 0
Execution stack: 
(New(v2, 3);(Ref(int) v3;(New(v3, 4);(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3)))))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
Output list: 
File table: 
Heap: 
1 -> 2
Barrier table: 

Program id: 0
Execution stack: 
New(v2, 3)
(Ref(int) v3;(New(v3, 4);(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3))))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
Output list: 
File table: 
Heap: 
1 -> 2
Barrier table: 

Program id: 0
Execution stack: 
(Ref(int) v3;(New(v3, 4);(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3))))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
Barrier table: 

Program id: 0
Execution stack: 
Ref(int) v3
(New(v3, 4);(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3)))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
Barrier table: 

Program id: 0
Execution stack: 
(New(v3, 4);(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3)))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
Barrier table: 

Program id: 0
Execution stack: 
New(v3, 4)
(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
Barrier table: 

Program id: 0
Execution stack: 
(newBarrier(cnt, ReadHeap(v2));(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 

Program id: 0
Execution stack: 
newBarrier(cnt, ReadHeap(v2))
(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3)))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 

Program id: 0
Execution stack: 
(Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))));(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3)))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [])

Program id: 0
Execution stack: 
Fork(((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))))
(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [])

Program id: 0
Execution stack: 
(Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))));((await cnt);print(ReadHeap(v3))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [])

Program id: 1
Execution stack: 
((await cnt);(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [])

Program id: 0
Execution stack: 
Fork(((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))))
((await cnt);print(ReadHeap(v3)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [])

Program id: 1
Execution stack: 
(await cnt)
(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [])

Program id: 0
Execution stack: 
((await cnt);print(ReadHeap(v3)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1])

Program id: 1
Execution stack: 
(await cnt)
(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1])

Program id: 2
Execution stack: 
((await cnt);(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2)))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1])

Program id: 0
Execution stack: 
(await cnt)
print(ReadHeap(v3))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1])

Program id: 1
Execution stack: 
(await cnt)
(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1])

Program id: 2
Execution stack: 
(await cnt)
(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1])

Program id: 0
Execution stack: 
(await cnt)
print(ReadHeap(v3))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

Program id: 1
Execution stack: 
(WriteHeap(v1, ReadHeap(v1) * 10);print(ReadHeap(v1)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

Program id: 2
Execution stack: 
(await cnt)
(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

Program id: 0
Execution stack: 
print(ReadHeap(v3))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

Program id: 1
Execution stack: 
WriteHeap(v1, ReadHeap(v1) * 10)
print(ReadHeap(v1))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

Program id: 2
Execution stack: 
(WriteHeap(v2, ReadHeap(v2) * 10);(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table: 
Heap: 
1 -> 2
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

Program id: 0
Execution stack: 
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
4
File table: 
Heap: 
1 -> 20
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

Program id: 1
Execution stack: 
print(ReadHeap(v1))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
4
File table: 
Heap: 
1 -> 20
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

Program id: 2
Execution stack: 
WriteHeap(v2, ReadHeap(v2) * 10)
(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
4
File table: 
Heap: 
1 -> 20
2 -> 3
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

Program id: 1
Execution stack: 
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
4
20
File table: 
Heap: 
1 -> 20
2 -> 30
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

Program id: 2
Execution stack: 
(WriteHeap(v2, ReadHeap(v2) * 10);print(ReadHeap(v2)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
4
20
File table: 
Heap: 
1 -> 20
2 -> 30
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

Program id: 2
Execution stack: 
WriteHeap(v2, ReadHeap(v2) * 10)
print(ReadHeap(v2))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
4
20
File table: 
Heap: 
1 -> 20
2 -> 30
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

Program id: 2
Execution stack: 
print(ReadHeap(v2))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
4
20
File table: 
Heap: 
1 -> 20
2 -> 300
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

Program id: 2
Execution stack: 
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
4
20
300
File table: 
Heap: 
1 -> 20
2 -> 300
3 -> 4
Barrier table: 
1 -> (3, [1, 0, 2])

